---
- name: Copy Vivaldi repository file
  ansible.builtin.copy:
    src: "{{ role_path }}/files/vivaldi.repo"
    dest: /etc/yum.repos.d/
    mode: '0644'
  become: true

- name: Upgrade all packages and refresh cache
  dnf:
    name: '*'
    state: latest
    update_cache: yes
  become: true
  when: ansible_distribution == 'Fedora'

- name: Install required packages on Fedora
  ansible.builtin.dnf:
    name: "{{ dnf_item }}"
    state: present
  loop:
    - btop # better htop/top
    - duff # better df
    - git-delta # better git diff
    - eza # better ls
    - zoxide # better cd
    - tldr # better man pages
    - vivaldi-stable # the best browser. End of discussion.
    - bat # better cat
    - distrobox # virtual linux distros
    - ncdu # disk usage analyzer
    - wget
    - fzf
    - qt5ct # styling qt apps
    - lxappearance # styling gtk apps
    - flameshot # screenshots
    - copyq # clipboard manager
    - ripgrep
    - curl
    - lshw
    - qbittorrent
    - trash-cli # ~/.local/share/Trash/ - trash location
    - chafa # cli graphics
    - dos2unix
    - vlc
    - unzip
    - fastfetch # neofetch :(
    - fd-find
    - sshpass
    - unrar
    - mpv
    - jq
    - nemo # Cinnamon file manager
  become: true
  loop_control:
    loop_var: dnf_item
  when: ansible_distribution == "Fedora"

- name: Download and install wlprop script
  ansible.builtin.get_url:
    url: https://gist.github.com/crispyricepc/f313386043395ff06570e02af2d9a8e0/raw/8b06f025a0f34685f5ffc2000fd19a64754c9b29/wlprop.sh
    dest: "{{ansible_user_dir}}/.local/bin/wlprop"
    mode: '0755'

# - name: Install SDKMAN
#   ansible.builtin.shell: >
#     curl -s "https://get.sdkman.io" | bash
#   args:
#     creates: "{{ ansible_user_dir }}/.sdkman"
#   when: ansible_distribution == 'Fedora'

- name: Install programs via snap
  community.general.snap:
    name: "{{ snap_item }}"
    state: present
  loop:
    - pieces-os
    - pieces-for-developers
  loop_control:
    loop_var: snap_item
  become: true
  when: ansible_distribution == 'Fedora'


# - name: Check if nvm is installed
#   ansible.builtin.command: command -v nvm
#   register: nvm_check
#   changed_when: false
#   ignore_errors: true
#
# - name: Install nvm (only if not installed)
#   ansible.builtin.shell: >
#     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
#   args:
#     creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
#   when: nvm_check.rc != 0 

- name: Check if OnlyOffice is installed
  stat:
    path: /usr/bin/onlyoffice-desktopeditors
  register: onlyoffice_installed

- name: Download OnlyOffice installer if not installed
  get_url:
    url: https://download.onlyoffice.com/install/desktop/editors/linux/onlyoffice-desktopeditors.x86_64.rpm
    dest: /tmp/onlyoffice-desktopeditors.x86_64.rpm
    mode: '0644'
  when: not onlyoffice_installed.stat.exists

- name: Check if mise is installed
  stat:
    path: "{{ansible_user_dir}}/.local/bin/mise"
  register: mise_installed

- name: Install mise
  shell: curl https://mise.run | sh
  args:
    executable: /bin/sh
  when: not mise_installed.stat.exists

- name: Install x (not twitter)
  shell: eval "$(curl https://get.x-cmd.com)"
  args:
    executable: /bin/bash

- name: Install OnlyOffice
  dnf:
    name: /tmp/onlyoffice-desktopeditors.x86_64.rpm
    state: present
    disable_gpg_check: true
  when: not onlyoffice_installed.stat.exists
  become: true

- name: Remove OnlyOffice installer
  file:
    path: /tmp/onlyoffice-desktopeditors.x86_64.rpm
    state: absent
  when: not onlyoffice_installed.stat.exists

- name: Check if lazydocker is installed
  stat:
    path: "{{ansible_user_dir}}/.local/bin/lazydocker"
  register: lazydocker_installed

- name: Install LazyDocker
  shell: curl -sSL https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
  args:
    executable: /bin/bash
  when: not lazydocker_installed.stat.exists

